				MODULE- 4 
1)POISONOUS PLANT 
7
6 5 8 4 7 10 9





2) Truck Tour 
4
4 6
6 5
7 3
4 5



3) Queue using two stacks 

direct

4)Find the middle element of a stack  
direct

5)The celebrity Problem  
direct

                                 m0dule-1

1) Strong Password
----------------------

#include <stdio.h>
#include <string.h>
// Function to determine the minimum number of characters to add
int minimumNumber(int n, char *password) {
    int required_chars = 0;
    int has_digit = 0, has_lower = 0, has_upper = 0, has_special = 0;
    const char *special_characters = "!@#$%^&*()-+";
    // Check the existing characters in the password
    for (int i = 0; i < n; i++) {
        if (password[i] >= '0' && password[i] <= '9') has_digit = 1;
        else if (password[i] >= 'a' && password[i] <= 'z') has_lower = 1;
        else if (password[i] >= 'A' && password[i] <= 'Z') has_upper = 1;
        else if (strchr(special_characters, password[i])) has_special = 1;
    }
    // Count the missing types of characters
    if (!has_digit) required_chars++;
    if (!has_lower) required_chars++;
    if (!has_upper) required_chars++;
    if (!has_special) required_chars++;
    // Ensure the password length is at least 6 characters
    if (n + required_chars < 6) {
        required_chars += (6 - (n + required_chars));
    }
    return required_chars;
}
  int main() {
    int n;
    char password[101];
    // Input the length of the password and the password itself
    scanf("%d", &n);
    scanf("%s", password);
    // Calculate and print the minimum number of characters to add
    int result = minimumNumber(n, password);
    printf("%d\n", result);
    return 0;
}

INPUT: 3
       Ab1
OUTPUT: Number of characters to make password strong: 3
5 
aB1@
OUTPUT: Number of characters to make password strong: 1



2) Running Time of algorithms
-------------------------
Input : Enter the number of elements: 5
Enter the elements: 2 1 3 1 2
Output : Number of shifts: 4


3)Power Sum 
---------------
#include <stdio.h>
#include <math.h>
// Function to recursively find the power sums
int powerSumHelper(int X, int N, int num) {
    int power = pow(num, N);
    if (power > X) {
        return 0;
    } else if (power == X) {
        return 1;
    } else {
        return powerSumHelper(X - power, N, num + 1) + powerSumHelper(X, N, num + 1);
    }
}
// Main function to find the number of ways to express X as sum of N-th powers of unique natural numbers
int powerSum(int X, int N) {
    return powerSumHelper(X, N, 1);
}
int main() {
    int X, N;
    printf("Enter X: ");// Input the values of X and N
    scanf("%d", &X);
    printf("Enter N: ");
    scanf("%d", &N);
    int result = powerSum(X, N);     // Calculate and print the number of combinations
    printf("%d\n", result);
    return 0;
}

Input:
Enter X: 100
Enter N: 3
Output: 1


4).Water Connection Problem (Aditional) 
direct

5)Gold Mine Problem (additional) 
direct










 						MODULE – 2
1) Sorting: Comparator
---------------------

Sample Input
5
amy 100
david 100
heraldo 50
aakansha 75
aleksa 150

Sample  Output
aleksa 150
amy 100
david 100
aakansha 75
heraldo 50


2) Pattern-syntax-checker
-------------------
Sample Input
3
([A-Z])(.+)
[AZ[a-z](a-z)
batcatpat(nat

Sample Output
Valid
Invalid
Invalid

3)3. Java SHA-256
---------------
Sample Input 
HelloWorld
Sample Output 
872e4e50ce9990d8b041330c47c9ddd11bec6b503ae9386a99da8584e9bb12c4


4) Java Regex2-  Duplicate words
----------------------------
Sample Input
5
Goodbye bye bye world world world
Sam went went to to to his business
Reya is is the the best player in eye eye game
in inthe
Hello hello Ab aB
Sample Output
Goodbye bye world
Sam went to his business
Reya is the best player in eye game
in inthe
Hello Ab



5)Java Reflection - Attributes (additional) 
----------------------------------------

10. Java Reflection – Attributes
Create 2 class called Employee and ReflectionAttributesExample with some fields
Employee.java
public class Employee {
    public String name;
    private double salary;
    protected int id;
    public Employee() {
    this.name = "Default";
   this.salary = 50000.0;
   this.id = 101;
    }
}
ReflectionAttributesExample.java
import java.lang.reflect.Field;
public class ReflectionAttributesExample {
    public static void main(String[] args) {
        try {
            // Create an instance of Employee
            Employee emp = new Employee();

            // Get the Class object
            Class<?> empClass = emp.getClass();
            // Print class name
            System.out.println("Class Name: " + empClass.getName());
            // Get all declared fields (including private & protected)
            Field[] fields = empClass.getDeclaredFields();
            System.out.println("\nDeclared Fields:");
            for (Field field : fields) {
            field.setAccessible(true); // Make private/protected accessible
       System.out.println("Field: " + field.getName() + " | Type: "field.getType().getSimpleName());
                // Print original value
                System.out.println("Original Value: " + field.get(emp));
                // Modify value based on field type
                switch (field.getType().getSimpleName()) {
                    case "String":
                        field.set(emp, "John Smith");
                        break;
                    case "double":
                        field.set(emp, 75000.0);
                        break;
                    case "int":
                        field.set(emp, 202);
                        break;
                }
                // Print updated value
                System.out.println("Updated Value: " + field.get(emp));
                System.out.println();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
Run ReflectionAttributesExample.java file
